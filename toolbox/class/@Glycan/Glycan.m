classdef Glycan
    % GLYCAN: An object storing the properties of single monosaccharides
    %    
    %   Syntax:
    %       monoMass = Glycan.glycanMSMap(mono1let) 
    %       monoFormula = Glycan.glycanformulaMap(mono1let) 
    %
    %   Input:
    %       mono1let: single-letter code for the monosaccharide
    %       
    %   Output;
    %       monoMass:  monosaccharide mass
    %       monoFormula: monosaccharide formula
    %    
    %   Examples:
    %       hexMass    = Glycan.glycanMSMap('h')
    %       hexFormula = Glycan.glycanformulaMap('h')
    %                      
    %   Note:                    Glycan table:
    %                          __________________
    %                            code | type
    %                          __________________
    %                              h  | Hexose
    %                              n  | HexNAc
    %                              s  | NeuAc
    %                              g  | NeuGc
    %                              f  | Fuc
    %                              x  | Xyl
    %                              z  | SO3
    %                              p  | PO3
    %                              u  | KDN
    %                              k  | HexA
    %                          _________________
    %
    %See also Chemele, Chemformula, Aminoacid, Protease, Modification, mzXML
    
    %Author: Gang Liu
    %Date Lastly Updated: 1/19/2015
    
      properties (Constant)
             Hex         = struct('C',6,'H',10,'O',5);
             HexNAC      = struct('C',8,'H',13,'O',5,'N',1);
             Fuc         = struct('C',6,'H',10,'O',4);
             DeoHex      = struct('C',6,'H',10,'O',4);
             NeuAC       = struct('C',11,'H',17,'O',8,'N',1);
             NeuGC       = struct('C',11,'H',17,'O',9,'N',1);        
             Pentose     = struct('C',5,'H',8,'O',4);                           
             Sulf        = struct('C',0,'H',0,'O',3,'S',1);  
             Phos        = struct('C',0,'H',1,'O',3,'P',1);      
             HexA        = struct('C',6,'H',8,'O',6);      
             KDN         = struct('C',9,'H',14,'O',8);
             Xyl         = struct('C',5,'H',8,'O',4);
             SO3         = struct('S',1,'O',3);
             PO3         = struct('P',1,'O',3,'H',1);
             HexNTGc     = struct('C',10,'H',16,'O',6,'N',2,'S',1);
             redEndForm        = struct('C',0,'H',2,'O',1,'N',0,'S',0,'P',0); 
             redEndMethylForm  = struct('C',2,'H',6,'O',1,'N',0,'S',0,'P',0);  %+2(ch2)
             HexMethyl         = struct('C',9,'H',16,'O',5,'N',0,'S',0,'P',0)  ;             %   +3(CH2)  3C6H
             HexNACMethyl      = struct('C',11,'H',19,'O',5,'N',1,'S',0,'P',0);     %   +3(CH2)  3C6H
             DeoHexMethyl      = struct('C',8,'H',14,'O',4,'N',0,'S',0,'P',0);    %  +2(CH2)  2C4H
             NeuACMethyl       = struct('C',16,'H',27,'O',8,'N',1,'S',0,'P',0);         %  +5(CH2)  5C10H
             
            glyfullname = {'Hex','HexNAc','NeuAc','NeuGc','Fuc',...
                           'Xyl','SO3','PO3','KDN','HexA',...
                           'HexNTGc'};
                       
            gly1let     = {'h','n','s','g','f',...
                           'x','z','p','u','k',...
                            'q'};
                        
            glyformula = { struct('C',6,'H',10,'O',5),...
                           struct('C',8,'H',13,'O',5,'N',1),...
                           struct('C',11,'H',17,'O',8,'N',1),...
                           struct('C',11,'H',17,'O',9,'N',1),...
                           struct('C',6,'H',10,'O',4),...
                           struct('C',5,'H',8,'O',4),...
                           struct('S',1,'O',3),...
                           struct('P',1,'O',3,'H',1),...
                           struct('C',9,'H',14,'O',8),...
                           struct('C',6,'H',8,'O',6),...
                           struct('C',10,'H',16,'O',6,'N',2,'S',1)};        
            
            glycanformulaMap = containers.Map({'h','n','s','g','f',...
                           'x','z','p','u','k',...
                            'q'},...
                          {struct('C',6,'H',10,'O',5),...
                           struct('C',8,'H',13,'O',5,'N',1),...
                           struct('C',11,'H',17,'O',8,'N',1),...
                           struct('C',11,'H',17,'O',9,'N',1),...
                           struct('C',6,'H',10,'O',4),...
                           struct('C',5,'H',8,'O',4),...
                           struct('S',1,'O',3),...
                           struct('P',1,'O',3,'H',1),...
                           struct('C',9,'H',14,'O',8),...
                           struct('C',6,'H',8,'O',6),...
                           struct('C',10,'H',16,'O',6,'N',2,'S',1)});
                       
            glycanMSMap = containers.Map({'h','n','s','g','f',...
                           'x','z','p','u','k',...
                            'q'},...
           {162.0528235,203.0793724,291.0954164,307.0903311,146.0579089,...
            132.0422588,79.95681459,79.96633093,176.0320881,250.0688675,...
            292.07289454}); 
            glycanMSPermMap = containers.Map({'h','n','s','g','f',...
                           'x','z','p','u','k',...
                            'q'},...
           {204.0998,245.1263,361.1737, 391.1842,174.0892,...
            160.0736,79.95681459,79.96633093,218.0790,320.1472,...
            292.07289454}); 
      end
end